//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TMSite.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Linq;
    using System.Web;
    using System.Web.Mvc;
 

    public partial class Driver : IValidatableObject
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Driver()
        {
            this.Routes = new HashSet<Route>();
        }
    
        public int DriverID { get; set; }
        [Display(Name="First Name")]
        [Required(ErrorMessage =" Driver's First Name is Required")]
        public string FirstName { get; set; }
        [Display(Name="Last Name")]
        [Required(ErrorMessage ="Driver's Last Name is Required")]
        public string LastName { get; set; }
        [Display(Name ="Licence Number")]
        [Required(ErrorMessage ="Licence Number is Required")]
        public string LicenceNumber { get; set; }
        [Display(Name ="Licence Expiry Date")]
        [Required(ErrorMessage ="Licence Expiry Date is Required")]
        [DataType(DataType.Date)]
        [DisplayFormat(DataFormatString = "{0:dd/MM/yyyy}", ApplyFormatInEditMode = true)]
        public Nullable<System.DateTime> LicenceExpiryDate { get; set; }
        [Display(Name ="Start Date")]
        [Required(ErrorMessage ="Driver's Start Data is Required")]
        [DataType(DataType.Date)]
        [DisplayFormat(DataFormatString = "{0:dd/MM/yyyy}", ApplyFormatInEditMode = true)]
        public Nullable<System.DateTime> StartDate { get; set; }
        [Display(Name ="End Date")]
        [DataType(DataType.Date)]
        [DisplayFormat(DataFormatString = "{0:dd/MM/yyyy}", ApplyFormatInEditMode = true)]
        public Nullable<System.DateTime> EndDate { get; set; }
        [Required(ErrorMessage ="Address is Required")]
        public string Address { get; set; }
        [Display(Name ="Home Phone")]
        [Required(ErrorMessage ="Home Phone Number is Required")]
        public string HomePhone { get; set; }
        public string Mobile { get; set; }
        public string Email { get; set; }
        [Display(Name ="Next to Kin")]
        [Required(ErrorMessage ="Driver's Next to Kin Name is Required")]
        public string NextToKin { get; set; }
        [Required(ErrorMessage ="Drivers most recent Photo is Required")]
        public string Photo { get; set; }

        // Licence-Expiry-Date custom validation with IValidatableObject interface
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            List<ValidationResult> res = new List<ValidationResult>();
            if (LicenceExpiryDate < DateTime.Today)
            {
                ValidationResult mss = new ValidationResult("Licence-Expiry-Date must be greater than or equal to Current Date.");
                res.Add(mss);

            }

            if (StartDate < DateTime.Today)
            {
                ValidationResult mss = new ValidationResult("Start-Date must be greater than or equal to Current Date.");
                res.Add(mss);
            }

            if (EndDate < StartDate)
            {
                ValidationResult mss = new ValidationResult("End-Date must be greater than or equal to Start-Date.");
                res.Add(mss);
            }

            return res;

            
        }

   

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Route> Routes { get; set; }
    }
}
